@startuml UML

class Mesh 
Mesh --> BorderMesh
Mesh --> LineMesh
Mesh --> PlayerMesh

class Mesh {

}

class vertex_data_t<<(S,#FF7700)struct>> {

}

BorderMesh "1" *--* "1" BorderModel : contains
class BorderMesh {

}

class BorderModel {

}
class Display {

}
Game "1" *--* "1" PlayerManager : contains
Game "1" *--* "1" BorderModel : contains
Game "1" *--* "1" Font : contains
Game "1" *--* "1" Menu : contains


class Game {
 

} 
    enum GameState<GameCLASS> {
 
}

LineMesh "1" *--* "1" Point : contains
class LineMesh {

}

LineModel "1" *--* "1" Point : contains
class LineModel {

}
class Model
Model --> BorderModel
Model --> LineModel
Model --> PlayerModel

model "1" *--* "1" Mesh : contains
class Model {

}
enum ModelType {

}

PlayerManager "1" *-- "many" PlayerModel : contains
PlayerManager "1" *-- "1" Point : contains
PlayerManager "1" *-- "1" Control : contains
class PlayerManager {
 
}

PlayerModel "1" *--* "1" PlayerMesh : contains
PlayerModel "1" *--* "1" Point : contains
PlayerModel "1" *--* "1" LineModel : contains
PlayerModel "1" *--* "1" Control : contains
class PlayerModel {

}
class Control<<(S,#FF7700)struct>>{

}
class Point <<(S,#FF7700)struct>> {

}
class shader {

}
class user<<(S,#FF7700)struct>> {

}

SidePanel "1" *--* "1" Font : contains
class SidePanel {

}
Menu "1" *--* "1" Font : contains

class Menu {

}
class Font {

}

class Control<<(S,#FF7700)struct>> {

}
GameOver "1" *--* "1" Font : contains
class GameOver {

}
@enduml